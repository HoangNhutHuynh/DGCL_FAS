import streamlit as st
#import pandas as pd
#import matplotlib.pyplot as plt
from histogramchart import histogram_bart
from sum_score import sum_score, MDTT
from KHDG import TS_DRMH
from PIL import Image
from download_data import convert_df
from Upload_file import upload_multyfile, upload_multyfile_sum, load_data
from make_df import make_df, make_df_sum
import numpy as np
from make_pdf import make_pdf
#import streamlit_authenticator as stauth

primaryColor="#6eb52f"
backgroundColor="#f0f0f5"
secondaryBackgroundColor="#e0e0ef"
textColor="#262730"
font="sans serif"
logo = Image.open('C:/DATA/CDR/61b17a711281b213efc3e79d.png')
st.image(logo)
st.markdown("<h1 style='text-align: center; color: black;'>ƒê√ÅNH GI√Å M·ª®C ƒê·ªò T√çCH L≈®Y CHU·∫®N ƒê·∫¶U RA M√îN H·ªåC</h1>", unsafe_allow_html = True)
#tab1, tab2 = st.tabs(["Gi·∫£ng vi√™n", "Qu·∫£n tr·ªã vi√™n"])
#with tab1:
st.markdown("<h1 style='text-align: center; color: black;'>T·∫£i b·∫£ng ƒëi·ªÉm</h1>", unsafe_allow_html=True)

tab1, tab2 = st.tabs(["üóÉ Data", "üìà Chart"])

with tab1:
    uploaded_files = st.file_uploader('T·∫£i b·∫£ng ƒëi·ªÉm t·∫°i ƒë√¢y', accept_multiple_files=True)
    option_subject = st.selectbox('Ch·ªçn m√¥n h·ªçc', ('PH1007', 'MT1005', 'PH1005', 'MT1007', 'AS1001', 'MT1003'))
    row1_space1, row1_1, row1_space2, row1_2, row1_space3 = st.columns((0.01, 1.4, 0.1, 1, 0.01))
    if uploaded_files:
        df1 = load_data(uploaded_files)
        
        kt_13 = np.sum(df1['Ki·ªÉm tra - 25%'] > 10.0)
        bt_13 = np.sum(df1['B√†i t·∫≠p - 5%'] > 10.0)
        btl_13 = np.sum(df1['B√†i t·∫≠p l·ªõn/Ti·ªÉu lu·∫≠n - 20%'] > 10.0)
        thi_13 = np.sum(df1['Thi - 50%'] > 10.0)
        sum_score(df1)
        with row1_1:
            st.dataframe(df1)
        with row1_2:
            #st.text("T·ªïng s·ªë sinh vi√™n trong m·∫´u: " + str(df1['T√™n'].count())+ ' sinh vi√™n')
            st.text("T·ªïng s·ªë sinh vi√™n v·∫Øng ki·ªÉm tra: " + str(kt_13)+ ' sinh vi√™n')
            st.text("T·ªïng s·ªë sinh vi√™n v·∫Øng b√†i t·∫≠p l·ªõn: " + str(btl_13)+ ' sinh vi√™n')
            st.text("T·ªïng s·ªë sinh vi√™n v·∫Øng b√†i t·∫≠p: " + str(bt_13)+ ' sinh vi√™n')
            st.text("T·ªïng s·ªë sinh vi√™n v·∫Øng thi: " + str(thi_13)+ ' sinh vi√™n')
            st.text("T·ªïng s·ªë sinh vi√™n t√≠nh to√°n: " + str(df1['M√£ sinh vi√™n'].count())+ ' sinh vi√™n')
            
        with tab2:
            st.title("Options")
            option = st.selectbox('ƒê·ªì th·ªã c√°c c·ªôt ƒëi·ªÉm',('Ki·ªÉm tra', 'B√†i t·∫≠p', 'B√†i t·∫≠p l·ªõn/Ti·ªÉu lu·∫≠n', 'Thi', "ƒêi·ªÉm t·ªïng k·∫øt"))
            st.write('C·ªôt ƒëi·ªÉm:', option)
            if option == "Ki·ªÉm tra":
                histogram_bart(df1['Ki·ªÉm tra - 25%'])
            if option == "B√†i t·∫≠p":
                histogram_bart(df1['B√†i t·∫≠p - 5%'])
            if option == 'B√†i t·∫≠p l·ªõn/Ti·ªÉu lu·∫≠n':
                histogram_bart(df1['B√†i t·∫≠p l·ªõn/Ti·ªÉu lu·∫≠n - 20%'])
            if option == 'Thi':
                histogram_bart(df1['Thi - 50%'])
            if option == "ƒêi·ªÉm t·ªïng k·∫øt":
                histogram_bart(df1['ƒêi·ªÉm t·ªïng k·∫øt - 100%'])            
            #st.set_option('deprecation.showPyplotGlobalUse', False)      
    if option_subject:
        check = st.checkbox('X√°c nh·∫≠n m√¥n ƒë√£ ch·ªçn')
        if st.button('T√≠nh tr·ªçng s·ªë c·ªßa CƒêRMH'):
            st.header('B·∫£ng th·ªëng k√™ chu·∫©n ƒë·∫ßu ra m√¥n h·ªçc', )
            row4_space1, row_rs, row4_s = st.columns((0.01, 1, 0.1))
            with row_rs:
                if option_subject == 'PH1007':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'PH1007')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('PH1007'), "text/csv", key='download-file.csv')
                    make_pdf(option_subject, kt_13, bt_13, btl_13, thi_13)
                if option_subject == 'PH1005':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'PH1005')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('PH1005'), "text/csv", key='download-file.csv')
                if option_subject == 'MT1005':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'MT1005')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('MT1005'), "text/csv", key='download-file.csv')
                if option_subject == 'MT1007':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'MT1007')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('MT1007'), "text/csv", key='download-file.csv')
                if option_subject == 'AS1001':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'AS1001')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('AS1001'), "text/csv", key='download-file.csv') 
                if option_subject == 'MT1003':
                    df1 = TS_DRMH(df1, 'Define_para.xlsx', 'MT1003')
                    st.dataframe(df1)
                    csv = convert_df(df1)
                    st.write('***T·ªáp t·∫£i v·ªÅ ·ªü ƒë·ªãnh d·∫°ng .csv n√™n kh√¥ng th·ªÉ ch·ªânh s·ª≠a***')
                    st.download_button("T·∫£i b·∫£ng ƒëi·ªÉm", csv, "bang_diem_{}.csv".format('MT1003'), "text/csv", key='download-file.csv')
                
           
